// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using m01_labMedicine.Model;

#nullable disable

namespace m01_labMedicine.Migrations
{
    [DbContext(typeof(LabMedicineContext))]
    [Migration("20230427025034_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("m01_labMedicine.Model.AtendimentoMedicoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DescricaoAtendimento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MedicoId")
                        .HasColumnType("int");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MedicoId");

                    b.HasIndex("PacienteId");

                    b.ToTable("Atendimento_Medico_Paciente");
                });

            modelBuilder.Entity("m01_labMedicine.Model.EnfermeiroModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("CofenUF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<string>("InstituicaoEnsinoFormacao")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefone")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("Id");

                    b.HasIndex("CPF")
                        .IsUnique();

                    b.ToTable("Enfermeiro");

                    b.HasData(
                        new
                        {
                            Id = 13,
                            CPF = "29949606055",
                            CofenUF = "9876543",
                            DataNascimento = new DateTime(1988, 5, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = 0,
                            InstituicaoEnsinoFormacao = "PUCRS",
                            NomeCompleto = "Lucas Nascimento",
                            Telefone = "51991232145"
                        },
                        new
                        {
                            Id = 14,
                            CPF = "31533137099",
                            CofenUF = "8765432",
                            DataNascimento = new DateTime(1999, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = 1,
                            InstituicaoEnsinoFormacao = "UNISP",
                            NomeCompleto = "Tatiana Lopes",
                            Telefone = "51991234564"
                        });
                });

            modelBuilder.Entity("m01_labMedicine.Model.MedicoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("CrmUF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<int>("EspecializacaoClinica")
                        .HasColumnType("int");

                    b.Property<int>("EstadoSistema")
                        .HasColumnType("int");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<string>("InstituicaoEnsinoFormacao")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefone")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("TotalAtendimentosRealizados")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CPF")
                        .IsUnique();

                    b.ToTable("Medico");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            CPF = "27580525046",
                            CrmUF = "1234567",
                            DataNascimento = new DateTime(1966, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EspecializacaoClinica = 0,
                            EstadoSistema = 0,
                            Genero = 1,
                            InstituicaoEnsinoFormacao = "UFGRS",
                            NomeCompleto = "Amanda Duarte",
                            Telefone = "51991144444",
                            TotalAtendimentosRealizados = 0
                        },
                        new
                        {
                            Id = 12,
                            CPF = "61164709046",
                            CrmUF = "2345678",
                            DataNascimento = new DateTime(1977, 4, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EspecializacaoClinica = 2,
                            EstadoSistema = 0,
                            Genero = 0,
                            InstituicaoEnsinoFormacao = "Ulbra",
                            NomeCompleto = "Vitor Moraes",
                            Telefone = "51987220022",
                            TotalAtendimentosRealizados = 0
                        });
                });

            modelBuilder.Entity("m01_labMedicine.Model.PacienteModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Alergias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("ContatoEmergencia")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Convenio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CuidadosEspecificos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("StatusAtendimento")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("TotalAtendimentos")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CPF")
                        .IsUnique();

                    b.ToTable("Paciente");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Alergias = "",
                            CPF = "08974003058",
                            ContatoEmergencia = "José",
                            CuidadosEspecificos = "",
                            DataNascimento = new DateTime(1981, 3, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = 0,
                            NomeCompleto = "Fernando Strijeski",
                            StatusAtendimento = 0,
                            Telefone = "51991234569",
                            TotalAtendimentos = 0
                        },
                        new
                        {
                            Id = 2,
                            Alergias = "",
                            CPF = "93779385031",
                            ContatoEmergencia = "Adão",
                            CuidadosEspecificos = "",
                            DataNascimento = new DateTime(1982, 4, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = 0,
                            NomeCompleto = "João Almeida",
                            StatusAtendimento = 0,
                            Telefone = "51991458547",
                            TotalAtendimentos = 0
                        },
                        new
                        {
                            Id = 3,
                            Alergias = "",
                            CPF = "96569905015",
                            ContatoEmergencia = "Maria",
                            CuidadosEspecificos = "",
                            DataNascimento = new DateTime(1983, 5, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = 0,
                            NomeCompleto = "Humberto de Assis",
                            StatusAtendimento = 0,
                            Telefone = "51998563256",
                            TotalAtendimentos = 0
                        },
                        new
                        {
                            Id = 4,
                            Alergias = "",
                            CPF = "33295762007",
                            ContatoEmergencia = "Jacó",
                            CuidadosEspecificos = "",
                            DataNascimento = new DateTime(1984, 6, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = 1,
                            NomeCompleto = "Júlia Rosa",
                            StatusAtendimento = 0,
                            Telefone = "51998856632",
                            TotalAtendimentos = 0
                        },
                        new
                        {
                            Id = 5,
                            Alergias = "",
                            CPF = "99919521019",
                            ContatoEmergencia = "Pedro",
                            CuidadosEspecificos = "",
                            DataNascimento = new DateTime(1985, 7, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = 2,
                            NomeCompleto = "Thiago Moreira",
                            StatusAtendimento = 0,
                            Telefone = "11994152365",
                            TotalAtendimentos = 0
                        },
                        new
                        {
                            Id = 6,
                            Alergias = "",
                            CPF = "61560818018",
                            ContatoEmergencia = "Otávio",
                            CuidadosEspecificos = "",
                            DataNascimento = new DateTime(1986, 8, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = 1,
                            NomeCompleto = "Bárbara Motta",
                            StatusAtendimento = 0,
                            Telefone = "11984574125",
                            TotalAtendimentos = 0
                        },
                        new
                        {
                            Id = 7,
                            Alergias = "",
                            CPF = "86376962017",
                            ContatoEmergencia = "Gisele",
                            CuidadosEspecificos = "",
                            DataNascimento = new DateTime(1987, 9, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = 1,
                            NomeCompleto = "Luciana de Andrade",
                            StatusAtendimento = 0,
                            Telefone = "11996563696",
                            TotalAtendimentos = 0
                        },
                        new
                        {
                            Id = 8,
                            Alergias = "",
                            CPF = "32671890044",
                            ContatoEmergencia = "Olavo",
                            CuidadosEspecificos = "",
                            DataNascimento = new DateTime(1988, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = 0,
                            NomeCompleto = "Roberto Lima da Silva",
                            StatusAtendimento = 0,
                            Telefone = "54998878985",
                            TotalAtendimentos = 0
                        },
                        new
                        {
                            Id = 9,
                            Alergias = "",
                            CPF = "77549502005",
                            ContatoEmergencia = "Bianca",
                            CuidadosEspecificos = "",
                            DataNascimento = new DateTime(1989, 11, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = 0,
                            NomeCompleto = "Daniel Holanda",
                            StatusAtendimento = 0,
                            Telefone = "51991147484",
                            TotalAtendimentos = 0
                        },
                        new
                        {
                            Id = 10,
                            Alergias = "",
                            CPF = "61067801022",
                            ContatoEmergencia = "Renan",
                            CuidadosEspecificos = "",
                            DataNascimento = new DateTime(1990, 12, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = 4,
                            NomeCompleto = "Paulo Pedrozo",
                            StatusAtendimento = 0,
                            Telefone = "51996566996",
                            TotalAtendimentos = 0
                        });
                });

            modelBuilder.Entity("m01_labMedicine.Model.AtendimentoMedicoModel", b =>
                {
                    b.HasOne("m01_labMedicine.Model.MedicoModel", "Medico")
                        .WithMany()
                        .HasForeignKey("MedicoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("m01_labMedicine.Model.PacienteModel", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Medico");

                    b.Navigation("Paciente");
                });
#pragma warning restore 612, 618
        }
    }
}
